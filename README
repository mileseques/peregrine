Peregrine is a cross-platform emulator for legacy Windows applications,
optimized for games.

Peregrine will be built primarily on QEMU and Wine: QEMU to handle
hardware emulation (particularly the processor), and Wine to emulate
the Windows kernel.

QEMU and Wine are built in C, higher-level components will likely be
built in C++, though I think my eariler plans may have been prematurely
rigid and complex so I'll adapt and devise plans for battles as I fight
them.

One important higher-level feature worth mentioning now, however, is the
idea of a "Peregrine package", which would be a file that contains within
it all the game files, disc image, launch instructions, and whatever other
configuration data is necessary to run a particular game. These packages
should make games easy for users to setup, and could even allow games to be
retrofit to better work on the emulated system.

The program is intended to be run on the following platforms:
-Android
-iOS (might get rejected from the App Store)
-Linux
-OS X
-Windows 7, 8, 10
And is intended to run applications built for Windows 9X and 2000-XP

Peregrine should have certain advantages over a traditional virtual
machine running a legacy Windows OS:
-Peregrine will be free (beer and freedom)
-Peregrine will be more efficient
-Peregrine will be easier to setup and use
-While it will probably be a long time into development before Peregrine
 works better, the tools will be much more readily available to fix its
 problems. (Sort of like Linux)

Will use GCC to compile, probably CMake for building*, and of course
GitHub for version control. All licensed GPL.

*was using Eclipse automatic makefiles before, and while convenient and
easy to use, I find it's not powerful enough to incorporate large and
complex existing code structures like QEMU and Wine. I use QMake at work
and it does some cool things but it's not the right tool for this job.
